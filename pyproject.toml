[tool.poetry]
name = "cloudimagedirectory"
version = "0.1.0"
description = "Locate RHEL images in public clouds"
authors = [
    "Felix Kolwa <felix@redhat.com>",
    "Major Hayden <major@redhat.com>",
    "Nina Olear <nolear@redhat.com>"
]
maintainers = [
    "Felix Kolwa <felix@redhat.com>",
    "Major Hayden <major@redhat.com>",
    "Nina Olear <nolear@redhat.com>"
]
license = "Apache-2.0"
readme = "README.md"
packages = [
    {include = "cloudimagedirectory", from = "src"}
]
include = [
    { path = "tests", format = "sdist" }
]

[tool.poetry.dependencies]
python = "^3.12.2"
click = "^8.1.7"
pytz = "^2023.3"
pandas = "^2.2.1"
opentelemetry-api = "^1.23.0"
opentelemetry-sdk = "^1.23.0"
opentelemetry-exporter-otlp = "^1.23.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
pytest-randomly = "^3.15.0"
pre-commit = "^3.6.2"
pytest-sugar = "^0.9.7"
rich = "^13.7.0"
deptry = "^0.12.0"
mypy = "^1.8.0"
tox = "^4.13.0"
pytest-xdist = "^3.5.0"
types-pytz = "^2023.3.0.0"

[tool.poetry.scripts]
cloudimagedirectory-transformer = "cloudimagedirectory.transformer:run"

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

# Much of what is below this line is borrowed from poetry's pyproject.yaml.
# https://github.com/python-poetry/poetry/blob/master/pyproject.toml
[tool.isort]
py_version = 39
profile = "black"
force_single_line = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ["src", "tests"]
extend_skip = ["setup.py"]

[tool.black]
line-length = 120
target-version = ['py39']
preview = true

[tool.mypy]
files = ["src/cloudimagedirectory"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
ignore_missing_imports = "True"

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 7

[tool.pytest.ini_options]
addopts = "-n auto --cov=src/cloudimagedirectory --cov-report=term-missing --cov-report=xml --cov-branch"
testpaths = [
    "tests"
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src/cloudimagedirectory"]
